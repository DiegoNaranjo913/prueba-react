{"version":3,"sources":["redux/actions/index.js","components/header.js","pages/home.js","components/title.js","components/form.js","components/loader.js","pages/car.js","pages/ship.js","pages/plane.js","redux/reducers/index.js","redux/store.js","app.js","serviceWorker.js","index.js"],"names":["changePage","page","type","payload","Header","dispatch","useDispatch","className","id","to","onClick","x","document","getElementById","Home","Title","useSelector","state","history","useHistory","useEffect","push","Form","useForm","register","handleSubmit","errors","fadeOut","elem","newValue","style","opacity","fadeOutInterval","setInterval","clearInterval","onSubmit","data","e","loader","box","message","display","axios","post","name","email","phone","split","age","then","res","backgroundColor","target","reset","textContent","ref","required","pattern","value","min","max","Loader","class","Car","Ship","Plane","reducer","action","store","createStore","App","path","exact","component","from","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.36489372.chunk.js","sourcesContent":["export const changePage = (page) => ({\r\n    type: \"CHANGE_PAG\",\r\n    payload: page\r\n});\r\n","import React from 'react';\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { changePage } from '../redux/actions/index'\r\nimport { FaBars } from \"react-icons/fa\";\r\n\r\nimport '../styles/header.scss';\r\n\r\n\r\nexport default function Header() {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const responsive = () => {\r\n        var x = document.getElementById(\"horizontal\");\r\n        if (x.className === \"horizontal\") {\r\n            x.className += \" responsive\";\r\n        } else {\r\n            x.className = \"horizontal\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"horizontal\" id=\"horizontal\">\r\n            <li><NavLink className=\"navlink home\" to=\"/\" >Inicio</NavLink></li>\r\n            <li><NavLink className=\"navlink\" to=\"/carro\" onClick={() => dispatch(changePage(\"Carro\"))}>Carro</NavLink></li>\r\n            <li><NavLink className=\"navlink\" to=\"/avion\" onClick={() => dispatch(changePage(\"Avión\"))}>Avión</NavLink></li>\r\n            <li><NavLink className=\"navlink\" to=\"/barco\" onClick={() => dispatch(changePage(\"Barco\"))}>Barco</NavLink></li>\r\n            <li >\r\n                <a className=\"icon\" onClick={responsive}>\r\n                    <FaBars />\r\n                </a>\r\n            </li>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nimport '../styles/title.scss';\r\n\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div className=\"title\">\r\n            <h1>Bienvenido al Inicio</h1>\r\n        </div>\r\n\r\n    );\r\n}","import React, { useEffect } from 'react';\r\nimport '../styles/title.scss';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nexport default function Title() {\r\n    const page = useSelector(state => state.page);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (page === \"\") {\r\n            history.push(\"/\")\r\n        }\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"title\">\r\n            <h1>Hola bienvenido sabemos que quieres viajar en un {page}</h1>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport '../styles/form.scss';\r\nimport { useForm } from 'react-hook-form'\r\nimport axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst URL = \"https://murmuring-peak-43417.herokuapp.com/api/users\";\r\n\r\n\r\nexport default function Form() {\r\n\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const page = useSelector(state => state.page);\r\n\r\n\r\n    const Submit = (data, e) => {\r\n        let loader = document.getElementById(\"div_loader\");\r\n        let box = document.getElementById(\"fade-out\");\r\n        let message = document.getElementById(\"text\");\r\n        loader.style.display = \"flex\";\r\n        axios.post(URL, { \"name\": data.name, \"email\": data.email, \"phone\": data.phone, \"nickname\": data.email.split(\"@\")[0], \"vehicle\": page, \"age\": data.age }).then(res => {\r\n            loader.style.display = \"none\";\r\n            if (res.data === \"Usuario Existente\") {\r\n                box.style.backgroundColor = \"red\"\r\n            } else {\r\n                box.style.backgroundColor = \"green\"\r\n            }\r\n            e.target.reset();\r\n            message.textContent = res.data;\r\n            fadeOut(box);\r\n        });\r\n    }\r\n\r\n    const fadeOut = (elem) => {\r\n        let newValue = 1;\r\n        elem.style.opacity = 1;\r\n        let fadeOutInterval = setInterval(function () {\r\n            if (newValue > 0) {\r\n                newValue -= 0.2;\r\n            } else if (newValue < 0) {\r\n                elem.style.opacity = 0;\r\n                clearInterval(fadeOutInterval);\r\n            }\r\n\r\n            elem.style.opacity = newValue;\r\n\r\n        }, 1000);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"center\">\r\n            <div className=\"form\">\r\n                <form onSubmit={handleSubmit(Submit)}>\r\n                    <h2>Formulario</h2>\r\n                    <label>Nombre Completo</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        ref={\r\n                            register({\r\n                                required: \"El campo nombre no debe ir vacío.\",\r\n                                pattern: {\r\n                                    value: /^[\\u00F1A-Za-z _]*[\\u00F1A-Za-z][\\u00F1A-Za-z _]*$/,\r\n                                    message: \"El nombre digitado no es valido.\"\r\n                                }\r\n                            })\r\n                        }\r\n                    />\r\n                    <label>Email</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"email\"\r\n                        ref={\r\n                            register({\r\n                                required: \"El campo email no debe ir vacío.\",\r\n                                pattern: {\r\n                                    value: /\\S+@\\S+\\.\\S+/,\r\n                                    message: \"El email digitado no es valido.\"\r\n                                }\r\n                            })\r\n                        }\r\n                    />\r\n                    <label>Celular</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"phone\"\r\n                        ref={\r\n                            register({\r\n                                required: \"El campo celular no debe ir vacío.\",\r\n                                pattern: {\r\n                                    value: /^3[\\d]{9}$/,\r\n                                    message: \"El número del celular no es valido.\"\r\n                                },\r\n                            })\r\n                        }\r\n                    />\r\n                    <label>Edad</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"age\"\r\n                        ref={\r\n                            register({\r\n                                required: \"El campo edad no debe ir vacío.\",\r\n                                pattern: {\r\n                                    value: /^[0-9.]+$/,\r\n                                    message: \"La edad digitada no es valida.\"\r\n                                },\r\n                                min: {\r\n                                    value: 18,\r\n                                    message: \"La edad minima es de 18.\"\r\n                                },\r\n                                max: {\r\n                                    value: 100,\r\n                                    message: \"La edad maxima es de 100.\"\r\n                                },\r\n                            })\r\n                        }\r\n                    />\r\n                    {errors.name && <p className=\"error\">{errors.name.message}</p>}\r\n                    {errors.email && <p className=\"error\">{errors.email.message}</p>}\r\n                    {errors.phone && <p className=\"error\">{errors.phone.message}</p>}\r\n                    {errors.age && <p className=\"error\">{errors.age.message}</p>}\r\n                    <div className=\"center\">\r\n                        <button >Guardar</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div className=\"fade-out\" id=\"fade-out\">\r\n                <p id=\"text\"></p>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport '../styles/loader.scss';\r\n\r\n\r\nexport default function Loader() {\r\n\r\n\r\n    return (\r\n        <div className=\"div_loader\" id=\"div_loader\">\r\n            <div class=\"loader\">\r\n\r\n            </div>\r\n        </div>\r\n\r\n        \r\n    );\r\n}","import React from 'react';\r\nimport Title from '../components/title'\r\nimport Form from '../components/form'\r\nimport Loader from '../components/loader'\r\n\r\nexport default function Car() {\r\n    return (\r\n        <div>\r\n            <Loader />\r\n            <Title />\r\n            <Form />\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport Title from '../components/title'\r\nimport Form from '../components/form'\r\nimport Loader from '../components/loader'\r\n\r\nexport default function Ship() {\r\n    return (\r\n        <div>\r\n            <Loader />\r\n            <Title />\r\n            <Form />\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport Title from '../components/title'\r\nimport Form from '../components/form'\r\nimport Loader from '../components/loader'\r\n\r\nexport default function Plane() {\r\n    return (\r\n        <div>\r\n            <Loader />\r\n            <Title />\r\n            <Form />\r\n        </div>\r\n    );\r\n}","const reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"CHANGE_PAG\":\r\n            state.page = action.payload;\r\n            return {\r\n                ...state\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import { createStore } from 'redux';\r\nimport page from './reducers/index';\r\nconst initialState = { page: '' };\r\n\r\nconst store = createStore(page, initialState);\r\n\r\nexport default store;","import React from 'react';\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport Header from './components/header'\r\nimport Home from './pages/home'\r\nimport Car from './pages/car'\r\nimport Ship from './pages/ship'\r\nimport Plane from './pages/plane'\r\nimport store from './redux/store'\r\n\r\nfunction App() {\r\n    return (\r\n        <Provider store={store}>\r\n            <Router>\r\n                <Header />\r\n                <Switch>\r\n                    <Route path=\"/inicio\" exact component={Home} />\r\n                    <Route path=\"/carro\" exact component={Car} />\r\n                    <Route path=\"/barco\" exact component={Ship} />\r\n                    <Route path=\"/avion\" exact component={Plane} />\r\n                    <Redirect from=\"/\" to=\"/inicio\" />\r\n                </Switch>\r\n            </Router>\r\n        </Provider>\r\n    );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './app';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}